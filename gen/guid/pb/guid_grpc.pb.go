// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.20.3
// source: guid.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	GuidService_GetGUIDPool_FullMethodName = "/v1.GuidService/GetGUIDPool"
)

// GuidServiceClient is the client API for GuidService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GuidServiceClient interface {
	GetGUIDPool(ctx context.Context, in *GetGUIDPoolRequest, opts ...grpc.CallOption) (*GetGUIDPoolRequestResponse, error)
}

type guidServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGuidServiceClient(cc grpc.ClientConnInterface) GuidServiceClient {
	return &guidServiceClient{cc}
}

func (c *guidServiceClient) GetGUIDPool(ctx context.Context, in *GetGUIDPoolRequest, opts ...grpc.CallOption) (*GetGUIDPoolRequestResponse, error) {
	out := new(GetGUIDPoolRequestResponse)
	err := c.cc.Invoke(ctx, GuidService_GetGUIDPool_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GuidServiceServer is the server API for GuidService service.
// All implementations must embed UnimplementedGuidServiceServer
// for forward compatibility
type GuidServiceServer interface {
	GetGUIDPool(context.Context, *GetGUIDPoolRequest) (*GetGUIDPoolRequestResponse, error)
	mustEmbedUnimplementedGuidServiceServer()
}

// UnimplementedGuidServiceServer must be embedded to have forward compatible implementations.
type UnimplementedGuidServiceServer struct {
}

func (UnimplementedGuidServiceServer) GetGUIDPool(context.Context, *GetGUIDPoolRequest) (*GetGUIDPoolRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGUIDPool not implemented")
}
func (UnimplementedGuidServiceServer) mustEmbedUnimplementedGuidServiceServer() {}

// UnsafeGuidServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GuidServiceServer will
// result in compilation errors.
type UnsafeGuidServiceServer interface {
	mustEmbedUnimplementedGuidServiceServer()
}

func RegisterGuidServiceServer(s grpc.ServiceRegistrar, srv GuidServiceServer) {
	s.RegisterService(&GuidService_ServiceDesc, srv)
}

func _GuidService_GetGUIDPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGUIDPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GuidServiceServer).GetGUIDPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GuidService_GetGUIDPool_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GuidServiceServer).GetGUIDPool(ctx, req.(*GetGUIDPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// GuidService_ServiceDesc is the grpc.ServiceDesc for GuidService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GuidService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "v1.GuidService",
	HandlerType: (*GuidServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGUIDPool",
			Handler:    _GuidService_GetGUIDPool_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "guid.proto",
}
